name: Complete Microservices Test

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-microservices:
    name: Test Microservices
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - MicroserviceUsuarios
          - MicroserviceReservas
          - MicroservicePromociones
          - MicroserviceCarritoCompras
          - MicroservicePagos

    steps:
      # 1. Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Disable shallow clone for full context

      # 2. List files for debugging purposes
      - name: List project files
        run: ls -R

      # 3. Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'
          
      # 4. Cache Maven packages
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # 5. Build, test, and analyze each microservice
      - name: Build and Test ${{ matrix.service }}
        working-directory: ./Viajes-Global-/${{ matrix.service }}
        run: |
          mvn clean install
          mvn test
          mvn verify

      # 6. Run static analysis for each microservice
      - name: Static Analysis for ${{ matrix.service }}
        working-directory: ./Viajes-Global-/${{ matrix.service }}
        run: |
          mvn checkstyle:check
          mvn pmd:check
          mvn spotbugs:check

      # 7. List files after build for verification
      - name: List files after build for ${{ matrix.service }}
        working-directory: ./Viajes-Global-/${{ matrix.service }}
        run: ls -R
